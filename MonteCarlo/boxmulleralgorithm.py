# -*- coding: utf-8 -*-
"""BoxMullerAlgorithm.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1m8Xpjpgwy0T1-qj2E2YoOzMH8Oso3V3e
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

np.random.seed(521)
sample_size = [1000, 5000, 10000, 15000]
n=len(sample_size)
nbins=25
if n==1:
  fig, (ax1,ax2,ax3) = plt.subplots(1,3)
else:
  fig,(ax1,ax2) = plt.subplots(1,2)

for ii in range(n):
  U1 = np.random.uniform(size=sample_size[ii])
  U2 = np.random.uniform(size=sample_size[ii])
  R = np.sqrt(-2 * np.log(U1))
  Theta = 2 * np.pi * U2
  X = R * np.cos(Theta)
  Y = R * np.sin(Theta)
  #fig,(ax1,ax2) = plt.subplots(n,2)
  temp = ax1.hist(X,bins=nbins,histtype='step',label=sample_size[ii])
  ax1.set_title("X")
  ax1.legend()

  temp = ax2.hist(Y,bins=nbins,histtype='step',label=sample_size[ii])
  ax2.set_title("Y")
  ax2.legend()
  if n==1:
  #prod=X*Y
    temp = ax3.hist2d(X,Y,bins=100,label=sample_size[ii])
    ax3.set_title("X vs. Y")
  #ax3.legend()


plt.tight_layout()
#plt.legend()
plt.show()