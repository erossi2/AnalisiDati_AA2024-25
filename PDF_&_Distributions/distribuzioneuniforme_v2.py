# -*- coding: utf-8 -*-
"""DistribuzioneUniforme_v2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eQkx1mED91FCVwlmY3Kq8gw2IdmDKOU6
"""

import numpy as np
import scipy as sp
from scipy import stats
from scipy.stats import norm
from scipy.stats import uniform
from scipy.optimize import curve_fit
import matplotlib.mlab as mlab
import matplotlib.pyplot as plt


unif_x = []
#limits of the distribution

x_low=[-100, -50, -25, -10]
x_high=[100, 50, 25, 10]
sample=10000

#https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.uniform.html
# https://www.programmareinpython.it/video-corso-python-base/il-ciclo-for-e-funzione-range/
#for jj in num:
for ii in range(4):

    np.random.seed(1)
    x = [np.random.uniform(x_low[ii], x_high[ii]) for _i in range(sample)]
    unif_x.append(x)

k = 0
histo_bin=100
fig, ax = plt.subplots(2, 2, figsize =(10, 10))


for i in range(0, 2):
    for j in range(0, 2):
        (loc, scale) =  uniform.fit(unif_x[k])
        n, bins, patches = ax[i, j].hist(unif_x[k], histo_bin, density=True, facecolor = 'blue', alpha = 0.5, label='uniform distribution');

        centers = (0.5*(bins[1:]+bins[:-1]))
        ax[i, j].plot(centers, uniform.pdf(centers, loc, scale), 'k--',linewidth = 3, label='pdf')
        ax[i, j].set_title('Uniform Distribution --- [{:.1f},{:.1f}]'.format(x_low[k],x_high[k]))
        ax[i, j].legend(loc="lower right")
        ax[i, j].set_xlabel('x')
        ax[i, j].set_ylabel('Probability density')
        k = k + 1

#plt.legend()
plt.show()