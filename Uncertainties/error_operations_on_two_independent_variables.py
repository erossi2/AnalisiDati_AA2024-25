# -*- coding: utf-8 -*-
"""Error_Operations_on_two_independent_variables.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12aK3iXTxXpZePmiC0QoUKzOCG22rO9rx

Evaluate the error of the sum of two uncorrelated variables
"""

import sympy as sp

x, dx = sp.symbols('x dx')
y, dy = sp.symbols('y dy')

z = x + y
dz = sp.sqrt(dx**2 + dy**2)

z_value = z.subs({x: 5, y: 10})
dz_value = dz.subs({dx: 0.1, dy: 0.2})
dz_value_significant_digits = ['{:g}'.format(float('{:.1g}'.format(dz_value)))]

print("Sum (z):", z_value)
print("Uncertainty of the sum (dz):", dz_value)
print("Uncertainty of the sum (dz):", dz_value_significant_digits)

"""Evaluate the error of the product of two uncorrelated variables"""

import sympy as sp

x, dx = sp.symbols('x dx')
y, dy = sp.symbols('y dy')

z = x * y
dz = sp.sqrt(y**2 * dx**2 + x**2 * dy**2)

z_value = z.subs({x: 5, y: 10})
dz_value = dz.subs({x: 5, y: 10 , dx: 0.1, dy: 0.2})
dz_value_significant_digits = ['{:g}'.format(float('{:.1g}'.format(dz_value)))]

print("Product (z):", z_value)
print("Uncertainty of the product (dz):", dz_value)
print("Uncertainty of the product (dz):", dz_value_significant_digits)

"""Evaluate the error of the ratio of two uncorrelated variables"""

import sympy as sp

x, dx = sp.symbols('x dx')
y, dy = sp.symbols('y dy')

z = x / y
dz = sp.sqrt(1/y**2 * dx**2 + x**2/y**2 * dy**2)

z_value = z.subs({x: 5, y: 10})
dz_value = dz.subs({x: 5, y: 10 , dx: 0.1, dy: 0.2})
dz_value_significant_digits = ['{:g}'.format(float('{:.1g}'.format(dz_value)))]

print("Ratio (z):", z_value)
print("Uncertainty of the ratio (dz):", dz_value)
print("Uncertainty of the ratio (dz):", dz_value_significant_digits)

import sympy as sp

x, dx = sp.symbols('x dx')
y, dy = sp.symbols('y dy')

z = x * sp.exp(-y)

dz = sp.sqrt(sp.exp(-y)**2 * dx**2 + x**2 * sp.exp(-y)**2 * dy**2)

z_value = z.subs({x: 5, y: 10}).evalf()
dz_value = dz.subs({x: 5, y: 10 , dx: 0.1, dy: 0.2}).evalf()
dz_value_significant_digits = ['{:g}'.format(float('{:.1g}'.format(dz_value)))]

print("x * exp(y) = (z):", z_value)
print("Uncertainty on z (dz):", dz_value)
print("Uncertainty on z (dz):", dz_value_significant_digits)